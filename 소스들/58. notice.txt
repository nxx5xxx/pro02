~.dto 에 게터세터가있는 Notice클래스를 만들고

con.myshop.model>
클래스
NoticeDAO.java
서블릿(NoticeDAO를호출할것임)
GetNoticeListCtrl.java (a href로 받으므로 get방식)


--NoticeDAO
메소드라 퍼블릭으로잡고
private Connection conn
pri~ Pre pstmt
pri~ Rset rs
//String sql = ""

public ArrayList<Notice> noticeListAll(){
	ArrayList<Notice> notiList = new ArrayList<>();
	//notice 테이블에서 모든 레코드를 검색하여 반환된 rs를 notiList에 add한다
	//스태틱으로 잡았기때문에 객체생성이 필요없다
	conn = Oracle11.getConnection();
		pstmt = conn.prepareStatement.(Oracle11.NOTICE_SELECT_ALL);
		rs =pstmt.executeQuery();
		while(rs.next()){
			Notice noti = new Notice(); //클래스 노티스에 값 저장해서 리스트로 보냄
			noti.setIdx(rs.getInt("컬럼명");
			noti.setTitle(rs.getString("컬럼명");
			~~
			notiList.add(noti);
		}	
		캐(ClassNotFound - 오라클 JDBC 클래스가 없거나 경로가 다른경우
		캐(SQLE~ - 
		캐

	return notiList; --이것이 보내는 구문이라 보면됨 
	--GetNoticeDo하고
	public Notice GetNotice(int idx){
	Notice noti = new Notice();
	//idx를 매개변수로 던져ㅓ 그에 해당하는 레코드 한 건만 변환받아 noti에 저장
위에거 그대로 받아서
pstmt = conn.pre~~("Oracle11.NOTICE_SELECT_ONE");
	pstmt.setInt(1,idx);
	return noti;
	}
}

--GetNoticeListCtrl.java
@WebServlet("/NoticeList.do")
pb cl GetN extedns Ht
	priv s f l s = 1L;
	protected vo doGet ~
	
	NoticeDAO ndao = new NoticeDAO();
	ArrayList<Notice> notiList = new ArrayList<>();
	notiList = ndao.noticeListAll();
	request.setAttribute("notiList",notiList);

	//디스패쳐로 뷰를 생성하여 noticeList.jsp로 요청받은 notiList를 포워드
	RequestDispatcher view = request.getRequestDispatcher("/WEB-INF/notice/notiList.jsp");
	view.forward(request,response);

--com.okbs.model;
--Oracle11
	static String driver = "oracle.jdbc.driver.OracleDriver";
	static String url = "jdbc:oracle:thin:@localhost:1521:xe";
	static String user = "pro02";
	static String password = "1234";
	public static Coonnection getConnection() throws ClassNotFoundException, SQLException{
		Class.forName(driver);
		Connection conn = DriverManager.getConnection(url, user, password);
		return conc;
	}
	public static void close(PreparedStatement pstmt, Connection conn){
		//pstmt가 null이 아니란말은 연결이 되어있다면이라는뜻
		if(pstmt!=null){
			트{}
				pstmt.close();
			캐{ e.printStackTrace();}
		if(conn!=null)
		}
	}
	public static void close(ResultSet rs, PreparedStatement pstmt, Connection conn){
	위방식으로 닫고

common.jsp에 부트스트랩추가
http://bootstrapk.com/
CDN

<!-- 합쳐지고 최소화된 최신 CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css">

<!-- 부가적인 테마 -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap-theme.min.css">

<!-- 합쳐지고 최소화된 최신 자바스크립트 -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js"></script>


index에
http://bootstrapk.com/components/#nav
마음에드는 메뉴바 추가해도된다

--GetNotice.do
int idx = Integer.parseInt(request.getParameter("idx")
NoticeDAO ndao = new NoticeDAO();
Notice noti =new Notice();
noti = ndao.getNotice(idx);

request.setAttribute~~


--------------

파일을 보내려면 멀티미디어데이터라
enctype=multipart/form-data 를써줘야한다
enctype는 인코딩 타입이라는의미
이것을 하기위해서는 cos.jar가 필요하다
<form action="" method="" enctype="multipart/form-data">

첨부파일 올리기
<label for="file1"> 첨부파일 </label>
<input type="file" name="file" id="file1" >
accept="*.pdf, *png, *.jpg" 이걸쓸경우  이파일들만 가능하다는 의미

-- 전송받는 컨트롤러 (서블릿)~.do
에서는
String savePath = "/업로드할디렉토리"; //ex :  "data/data" // 가상서버도 이클립스 기반으로 갖고가니까 이클립스에서 업로드할디렉토리 만들어줄것
int  uploadFileSizeLimit = 10*1024*1024; //최대 업로드할 파일크기 제한 (byte단위 숫자라서 10 * 1024* 1024 = 10mb)
String encType = "UTF-8"; //멀티 파트 데이터의 인코딩 설정
ServletContext context = getServletContext(); // 현재 서블릿 (프로젝트) 의 위치 저장
String uploadFilePath = context.getRealPath(savePath); //서버 상에 실제 업로드 되는 디렉토리 지정
System.out.println("서버 상의 실제 업로드 되는 디렉토리 테스트 : " +uploadFilePath);

String title ="";
String content ="";
String author = "";
String fileName ="";
//MultipartRequest의 옵션내용
1. request : 요청받은 객체
2. uploadFilePath : 서버상의 실제 디렉토리
3. uploadFileSizeLimit : 최대 업로드 파일 크기
4. encType : 인코딩 방법
5. new DefaultFileRenamePolicy() : 파일이름이 같을경우 처리방식  - 동일한 이름이 존재한다면 뒤에 숫자가 붙어서 새로운이름이 부여되며, 생략하면 , 덮어쓰기가 된다
try{
	//Multi~ fileName 이 두줄이 실제 파일을 처리하는부분
	MultipartRequest multi = new MultipartRequest(request, uploadFilePath,uploadFileSizeLimit, encType, new DefaultFileRenamePolicy());
	fileName = multi.getFilesystemName("file");
	if(fileName == null){//파일이 업로드 되지 않았을때
		System.out.println("파일 업로드 실패");
	}else { //파일이 업로드되면 아래 구문들도 실행
	author = multi.getParameter("author")
	title ~~
	content~~~
	//테스트
	sysout("파일업로드성공");
	syso("글쓴이 : "+author);
	~~~~
	}
}catch(Exception e){
 Sysout(예외발생+e);
}
//나중에 업로드할땐 Sysout은 다 걷어내고 e.printException? 이걸로 다 바꿔야한다




2,3,4는 String타입이다
5는 생략해도됨
encType -> UTF-8


// 파일 업로드는 multi.getFilesystemName(" 네임 ");
//파일이름과 함께 업로드는 fileName = multi.getFilesystemName("file1"); 로 파일을 올리며 이름을 얻어올수있다 

------------------
개발서버 - 가상서버
[jar:file:/D:/woozookim/jsp00/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/pro00/WEB-INF/lib/mariadb-java-client-3.0.3.jar!/]

pro02는
D:\woozookim\jsp00\.metadata\.plugins\org.eclipse.wst.server.core\tmp0\wtpwebapps\pro02

파일은 여기에 올려야한다
에디터에 있으면 다운로드 테스트를 진행해보지못한다